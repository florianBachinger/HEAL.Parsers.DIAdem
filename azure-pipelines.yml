# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core


trigger:
  branches:
    include:
    - master
    - feature/*
    - 'v*'
  paths:
    exclude:
    - docs/*
    - LICENSE.*
    - README.*

pool:
  vmImage: 'windows-latest'

variables:
  # SolutionDir variable is required for prebuild events in projects
  SolutionDir: '$(Build.SourcesDirectory)\src\' 
  buildConfiguration: Release

steps:

# ------------ Nerdbank.GitVersioning ------------
- task: DotNetCoreCLI@2  
  displayName: Install NBGV tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv

- script: nbgv cloud
  displayName: Set Version


# ------------ Prepare environment ------------
- task: UseDotNet@2
  displayName: 'install .NET Core SDK'
  inputs:
    packageType: 'sdk'
    version: '2.x'

# ------------ download and place secret files ------------
- task: DownloadSecureFile@1
  displayName: 'download NiLibDdc library'
  name: NILIBDDCLibraries
  inputs:
    secureFile: 'NILIBDDC-64bit.zip'

- task: CopyFiles@2
  displayName: 'copy NiLibDdc library'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: NILIBDDC-64bit.zip
    TargetFolder: '$(Build.Repository.LocalPath)\src\libs\'

# ------------ build and test projects ------------
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    configuration: '$(buildConfiguration)'
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    configuration: '$(buildConfiguration)'
    command: 'test'
    projects: '**/src/tests/**/*.csproj'
    arguments: '--configuration $(buildConfiguration)'
    failTaskOnFailedTests: true

# ------------ pack and deploy packages ------------

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'NuGet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj;!**/*Tests.csproj'
    versioningScheme: 'off'
    includeSymbols: true
    packDestination: '$(Build.ArtifactStagingDirectory)/packages'
    

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/packages'
    ArtifactName: 'packages'
    publishLocation: 'Container'
  displayName: Publish deployable packages


- task: NuGetCommand@2
  displayName: 'nuget push'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '3c27b113-5a86-4767-b364-4e2ec207c21b/ba768a9d-31c9-40c6-a1b9-627502ffc6b0'
    allowPackageConflicts: true